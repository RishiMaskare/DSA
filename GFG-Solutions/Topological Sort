class Solution {
  private:
  void dfs(int node, vector<int>& vis, vector<int> adjList[], stack<int>& st) {
      vis[node] = 1;
      for(auto it : adjList[node]) {
          if(!vis[it]) {
              dfs(it, vis, adjList, st);
          }
      }
      st.push(node);
  }
  public:
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        vector<int> vis(V, 0);
        vector<int> adjList[V];
        stack<int> st;
        for(auto edge : edges) {
            int u = edge[0];
            int v = edge[1];
            adjList[u].push_back(v);
        }
        for(int i=0;i<V;i++) {
            if(!vis[i]) {
                dfs(i, vis, adjList, st);
            }
        }
        vector<int> ans;
        while(!st.empty()) {
            ans.push_back(st.top());
            st.pop();
        }
        return ans;
    }
};
